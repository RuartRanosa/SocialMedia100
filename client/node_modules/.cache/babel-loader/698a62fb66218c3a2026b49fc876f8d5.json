{"ast":null,"code":"var _jsxFileName = \"/home/ruart/Documents/SocialMedia100/client/src/Components/Profile.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport GetFriendList from './GetFriendList.js';\nimport GetPosts from './GetPosts.js';\nimport AddPost from './AddPost.js';\nimport './CSS/Profile.css';\n\nconst qs = require(\"query-string\");\n\nclass Profile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userId: 0,\n      username: '',\n      name: '',\n      email: '',\n      posts: [],\n      requests: [],\n      showFriends: false,\n      friends: []\n    };\n    this.sendFriendRequest = this.sendFriendRequest.bind(this);\n    this.showRequests = this.showRequests.bind(this);\n    this.addFriend = this.addFriend.bind(this);\n    this.rejectFriend = this.rejectFriend.bind(this);\n    this.showFriends = this.showFriends.bind(this);\n  }\n\n  showFriends() {\n    this.setState({\n      showFriends: true\n    });\n  }\n\n  addFriend(id) {\n    const friendRequest = {\n      userId: localStorage.userId,\n      friendId: id\n    };\n    fetch('http://localhost:3000/add-friend', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(friendRequest)\n    }).then(response => response.json()).then(body => {\n      if (body.success) {\n        alert(\"Friend request accepted\");\n      } else {\n        alert('Failed to post');\n      }\n    });\n    window.location.reload(this);\n  }\n\n  rejectFriend(id) {\n    const friendRequest = {\n      userId: localStorage.userId,\n      friendId: id\n    };\n    fetch('http://localhost:3000/reject-friend', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(friendRequest)\n    }).then(response => response.json()).then(body => {\n      if (body.success) {\n        alert(\"Friend request rejected\");\n      } else {\n        alert('Failed to post');\n      }\n    });\n    window.location.reload(this);\n  }\n\n  showRequests() {\n    fetch('http://localhost:3000/get-friend-request/?userId=' + localStorage.userId).then(response => {\n      return response.json();\n    }).then(res => {\n      this.setState({\n        requests: res.result\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  sendFriendRequest(friendId) {\n    const request = {\n      userId: localStorage.userId,\n      friendId: friendId\n    };\n    fetch('http://localhost:3000/send-friend-request', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(request)\n    }).then(response => response.json()).then(body => {\n      if (body.success) {\n        alert(\"Friend request sent\");\n      } else {\n        alert('Failed to post');\n      }\n    });\n  }\n\n  componentDidMount() {\n    var id = qs.parse(this.props.location.search, {\n      ignoreQueryPrefix: true\n    }).userId;\n\n    if (localStorage.usertoken) {\n      var token = localStorage.usertoken;\n      var decoded = jwt_decode(token);\n\n      if (decoded.userId === id) {\n        this.setState({\n          userId: decoded.userId,\n          username: decoded.username,\n          name: decoded.name,\n          email: decoded.email\n        });\n      } else {\n        fetch('http://localhost:3000/get-user/?userId=' + id).then(response => {\n          return response.json();\n        }).then(res => {\n          this.setState({\n            userId: id,\n            username: res.result[0].username,\n            name: res.result[0].name,\n            email: res.result[0].email\n          });\n        }).catch(e => {\n          console.log(e);\n        });\n      }\n\n      console.log(\"THE USER ID: \" + localStorage.userId);\n      fetch('http://localhost:3000/get-friends/?userId=' + localStorage.userId).then(response => {\n        return response.json();\n      }).then(res => {\n        console.log(res.result);\n        this.setState({\n          friends: res.result\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    } else {\n      alert(\"Login to access page\");\n      this.props.history.push(\"/\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    window.location.reload();\n  }\n\n  render() {\n    var id = qs.parse(this.props.location.search, {\n      ignoreQueryPrefix: true\n    }).userId;\n\n    const RequestList = () => {\n      const options = this.state.requests.map(i => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, i.username), React.createElement(Button, {\n        onClick: () => this.addFriend(i.userId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Accept\"), React.createElement(Button, {\n        onClick: () => this.rejectFriend(i.userId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Reject\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }))));\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, options);\n    };\n\n    const FriendList = () => {\n      const options = this.state.friends.map(i => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, i.username), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }))));\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, options);\n    };\n\n    return React.createElement(\"div\", {\n      class: \"pdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      class: \"ptable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \" Username: \", this.state.username), React.createElement(\"tr\", {\n      className: \"ptr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Name: \", this.state.name)), React.createElement(\"tr\", {\n      className: \"ptr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Email: \", this.state.email)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      className: \"ptr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })), this.state.userId !== localStorage.userId ? React.createElement(Button, {\n      onClick: () => this.sendFriendRequest(this.state.userId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Friend Request\") : \"\", React.createElement(Button, {\n      class: \"friendRequestButton\",\n      onClick: () => this.showFriends(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \" Show Friends \"), this.state.showFriends ? {\n      FriendList\n    } : \"\", this.state.userId == localStorage.userId ? React.createElement(Button, {\n      class: \"friendRequestButton\",\n      onClick: () => this.showRequests(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"   Show Friend Requests \") : \"\", React.createElement(\"div\", {\n      class: \"friendRequests\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(RequestList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"friendsList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(GetFriendList, {\n      userId: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"addPosts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(AddPost, {\n      userId: localStorage.userId,\n      id: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"otherPosts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(GetPosts, {\n      id: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/home/ruart/Documents/SocialMedia100/client/src/Components/Profile.js"],"names":["React","Component","Button","Link","jwt_decode","GetFriendList","GetPosts","AddPost","qs","require","Profile","constructor","state","userId","username","name","email","posts","requests","showFriends","friends","sendFriendRequest","bind","showRequests","addFriend","rejectFriend","setState","id","friendRequest","localStorage","friendId","fetch","method","headers","body","JSON","stringify","then","response","json","success","alert","window","location","reload","res","result","catch","e","console","log","request","componentDidMount","parse","props","search","ignoreQueryPrefix","usertoken","token","decoded","history","push","componentWillReceiveProps","nextProps","render","RequestList","options","map","i","FriendList"],"mappings":"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","sourcesContent":["import React, {Component } from 'react'\nimport { Button } from 'react-bootstrap';\nimport {Link} from 'react-router-dom'\nimport jwt_decode from 'jwt-decode'\nimport GetFriendList from './GetFriendList.js'\nimport GetPosts from './GetPosts.js'\nimport AddPost from './AddPost.js'\nimport './CSS/Profile.css'\nconst qs = require(\"query-string\")\n\n\nclass Profile extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            userId: 0,\n            username: '',\n            name: '',\n            email: '',\n            posts: [],\n            requests: [],\n            showFriends: false,\n            friends: []\n        }\n        this.sendFriendRequest = this.sendFriendRequest.bind(this)\n        this.showRequests = this.showRequests.bind(this)\n        this.addFriend = this.addFriend.bind(this)\n        this.rejectFriend = this.rejectFriend.bind(this)\n        this.showFriends = this.showFriends.bind(this)\n    }\n\n    showFriends(){\n        this.setState({showFriends: true})\n    }\n\n    addFriend(id){\n        const friendRequest = {\n            userId: localStorage.userId,\n            friendId: id\n        }\n        fetch('http://localhost:3000/add-friend',\n          {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(friendRequest)\n          })\n          .then(response => response.json())\n          .then(body => {\n            if(body.success){\n                alert(\"Friend request accepted\")\n            }else{ \n                alert('Failed to post') \n            }\n          })\n          window.location.reload(this)\n    }\n\n    rejectFriend(id){\n        const friendRequest = {\n            userId: localStorage.userId,\n            friendId: id\n        }\n        fetch('http://localhost:3000/reject-friend',\n          {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(friendRequest)\n          })\n          .then(response => response.json())\n          .then(body => {\n            if(body.success){\n                alert(\"Friend request rejected\")\n            }else{ \n                alert('Failed to post') \n            }\n          })\n          window.location.reload(this)\n    }\n\n    showRequests(){\n        fetch('http://localhost:3000/get-friend-request/?userId='+localStorage.userId)\n        .then((response) => { return response.json() })\n        .then((res) => {\n            this.setState({\n                requests: res.result\n            })\n        })\n        .catch((e) => { console.log(e)});\n    }\n\n    sendFriendRequest(friendId){\n        const request = {\n            userId: localStorage.userId,\n            friendId: friendId\n        }\n        fetch('http://localhost:3000/send-friend-request',\n          {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(request)\n          })\n          .then(response => response.json())\n          .then(body => {\n            if(body.success){\n                alert(\"Friend request sent\")\n            }else{ \n                alert('Failed to post') \n            }\n          })\n    }\n\n    componentDidMount () {\n        var id = qs.parse(this.props.location.search, {ignoreQueryPrefix: true}).userId\n            if(localStorage.usertoken){\n                var token = localStorage.usertoken\n                var decoded = jwt_decode(token)\n                if(decoded.userId === id){\n                    this.setState({\n                        userId: decoded.userId,\n                        username: decoded.username,\n                        name: decoded.name,\n                        email: decoded.email\n                    })\n                    \n                }else{\n                    fetch('http://localhost:3000/get-user/?userId='+id)\n                    .then((response) => { return response.json() })\n                    .then((res) => {\n                        this.setState({\n                            userId: id,\n                            username: res.result[0].username,\n                            name: res.result[0].name,\n                            email: res.result[0].email\n                        })\n                    })\n                    .catch((e) => { console.log(e)});        \n                }\n                console.log(\"THE USER ID: \"+localStorage.userId)\n                fetch('http://localhost:3000/get-friends/?userId='+localStorage.userId)\n                .then((response) => { return response.json() })\n                .then((res) => {\n                    console.log(res.result)\n                    this.setState({friends: res.result})\n                })\n                .catch((e) => { console.log(e)});\n            }else{\n                alert(\"Login to access page\")\n                this.props.history.push(`/`)\n\n            }\n    }\n\n    componentWillReceiveProps(nextProps){\n           window.location.reload()\n    }\n\n\n    render () { \n        var id = qs.parse(this.props.location.search, {ignoreQueryPrefix: true}).userId\n        const RequestList = () => {\n            const options = this.state.requests.map((i) => (\n                <div>   \n                    <ul>\n                        \n                            <li>{i.username}</li>    \n                            <Button onClick = {() => this.addFriend(i.userId)}>Accept</Button> \n                            <Button onClick = {() => this.rejectFriend(i.userId)}>Reject</Button>\n                        <br/>\n                        \n                    </ul>\n                </div>    \n            ))\n            return <ul>{options}</ul>\n         }\n\n         const FriendList = () => {\n            const options = this.state.friends.map((i) => (\n                <div>   \n                    <ul>\n                            <li>{i.username}</li>    \n                        <br/>\n                        \n                    </ul>\n                </div>    \n            ))\n            return <ul>{options}</ul>\n         }\n\n        return ( \n            <div class=\"pdiv\">\n                    <table class=\"ptable\">\n                        <tr> Username: {this.state.username}</tr>\n                        <tr className=\"ptr\">\n                            <td>Name: {this.state.name}</td>\n                        </tr>\n                        <tr className=\"ptr\">\n                            <td>Email: {this.state.email}</td>\n                        </tr>\n                        <tr><td><br/></td></tr>\n                        <tr className=\"ptr\">\n                        </tr>\n                    </table>\n                    {/*<GetFriendList/>*/}\n\n                     \n                    {this.state.userId !== localStorage.userId ? <Button onClick = {() => this.sendFriendRequest(this.state.userId)}>Friend Request</Button>: \"\"}\n                   <Button class=\"friendRequestButton\" onClick = {() => this.showFriends()}> Show Friends </Button>\n                    {this.state.showFriends ?  {FriendList}\n                    : \"\"}\n                    \n\n                    {this.state.userId == localStorage.userId ?  <Button class=\"friendRequestButton\" onClick = {() => this.showRequests()}>   Show Friend Requests </Button>\n                    : \"\"}\n                    \n\n                    <div class=\"friendRequests\"> \n                    <RequestList/>\n                    </div>\n                    \n\n                    <div class=\"friendsList\">\n                    <GetFriendList userId={id}/>\n                    </div>\n\n\n                    <div class=\"addPosts\">\n                    <AddPost userId = {localStorage.userId} id = {id}/>\n                    </div>\n\n                    <div class=\"otherPosts\"> \n                    <GetPosts id = {id}/>\n                    </div>\n            </div>\n        )\n    }\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}